{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Event.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","setmyStyle","_useState3","_useState4","myText","setText","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","Navbar","props","concat","mode","react_router_dom","to","title","aria-label","aria-current","role","placeholder","aria-checked","toggleMode","htmlFor","TextForm","word","text","length","split","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","textt","document","getElementById","select","navigator","clipboard","writeText","defaultProps","Event","msg","App","setMode","setmsg","setTimeout","body","components_Event","react_router","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6dd65cc5.chunk.js","sourcesContent":["\r\nimport React, {useState} from \"react\";\r\n\r\nexport default function About() {\r\n  const [myStyle, setmyStyle] = useState({\r\n    color: 'black',\r\n    backgroundColor: 'white'\r\n  });\r\n  const [myText, setText] = useState('Enable Dark Mode');\r\n  const changeMode = ()=>{\r\n    if(myStyle.color === 'white'){\r\n      setmyStyle({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n      });\r\n      setText('Enable Dark Mode');\r\n    }\r\n    else{\r\n      setmyStyle({\r\n        color: 'white',\r\n        backgroundColor: 'black'\r\n      });\r\n      setText('Enable Light Mode');\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"container my-3\" style={myStyle}>\r\n      <h2>About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\"  style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={changeMode}>{myText}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input mx-3\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" aria-checked='true' onClick={props.toggleMode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable Dark Mode</label>\r\n</div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired };\r\nNavbar.defaultProps = { title: \"Default Title\" };\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUc = ()=>{\r\n    // console.log(\"You have clicked Uppercase\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to Uppercase Succesfully');\r\n  }\r\n\r\n  const handleLc = ()=>{\r\n    // console.log(\"You have clicked Uppercase\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to Lowercase Succesfully');\r\n  }\r\n\r\n  const clearText = ()=>{\r\n    // console.log(\"You have clicked Uppercase\");\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert('Text Cleared!');\r\n  }\r\n\r\n  const copyText = ()=>{\r\n    let textt = document.getElementById('myBox');\r\n    textt.select();\r\n    navigator.clipboard.writeText(textt.value);\r\n    props.showAlert('Text Copied!');\r\n  }\r\n\r\n  const handleChange = (event)=>{\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    let word;\r\n    if(text.length === 0){\r\n      word = 0;\r\n    }\r\n    else{\r\n      word = text.split(\" \").length;\r\n      \r\n    }\r\n  return (\r\n    <>\r\n      <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} placeholder=\"Enter Text Here\" onChange={handleChange} id=\"myBox\" rows=\"8\" style={{backgroundColor: props.mode==='dark'?'#121212':'white',\r\n          color: props.mode==='dark'?'white':'black'\r\n        }}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUc}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLc}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-dark mx-2 my-2\" onClick={clearText}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={copyText}>Copy Text</button>\r\n      </div>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your text Summary</h1>\r\n        <p><b>{0.008 * word}</b> Minutes Read</p>\r\n        <p><b>{word}</b> Words, <b>{text.length}</b> Characters</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTextForm.propTypes = { heading: PropTypes.string.isRequired };\r\nTextForm.defaultProps = { heading: \"Default Heading\" };\r\n","import React from 'react'\r\n\r\nfunction Event(props) {\r\n    \r\n  return (\r\n    props.msg && <div className=\"alert alert-success\" role=\"alert\">\r\n    <strong>{props.msg}</strong>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Event","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Event from './components/Event';\nimport React, {useState} from 'react'\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setMode] = useState('light');\nconst [msg, setmsg] = useState(null);\n\nconst showAlert = (a)=>{\n  setmsg(a);\n  setTimeout(() => {\n    setmsg(null);\n  }, 1500);\n}\nconst toggleMode = ()=>{\n  if(mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#121212';\n    showAlert('Dark mode enabled Succesfully');\n    document.title = 'TextUtils - Dark';\n    \n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert('Light mode enabled Succesfully');\n    document.title = 'TextUtils - Light';\n  \n  }\n}\n\n  return (\n    \n     <BrowserRouter>\n     <Navbar title = \"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n  <Event msg={msg}/>\n    <Routes>\n      <Route path=\"/\" element={<TextForm heading =\"Enter the text to analyze Below\" mode={mode} showAlert={showAlert}/>}/>\n       \n       \n          <Route path=\"/about\" element={<About/>} />\n         \n    </Routes>\n  </BrowserRouter>\n \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}